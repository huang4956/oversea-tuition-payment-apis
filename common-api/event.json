{
  "swagger": "2.0",
  "info": {
    "title": "EVENT API",
    "version": "1.0",
    "description": "This section contains operations and models of Lianlian Pay notification system. Lianlian Pay uses hypermedia to provide additional information for the client to better processing an Lianlian Pay system generated event. \n\nClient should register event callbacks via Lianlian Pay webhook API in order to receive any event.\n\nProduction Endpoint - **global-api.lianlianpay.com**",
    "contact": {
      "email": "fx_support@lianlianpay.com"
    }
  },
  "host": "global-api-sandbox.lianlianpay-inc.com",
  "paths": {
    "/events": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Total event count"
                },
                "list": {
                  "type": "array",
                  "description": "Event object list",
                  "items": {
                    "$ref": "#/definitions/event"
                  }
                }
              },
              "required": [
                "total",
                "list"
              ]
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | \\[PARAMETER\\] ERROR_MESSAGE |",
            "schema": {
              "$ref": "./error.oas2.yml#/definitions/error"
            }
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Get Event List",
        "description": "Get a list of Lianlian Pay system generated events. Empty list will be returned if there is no applicable events.\n\nReturn type is List<`Event`>",
        "operationId": "get-event-list",
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "topic",
            "type": "array",
            "description": "Event topic defined in Lianlian Pay's system.",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageNum",
            "type": "integer",
            "description": "If nonzero, skip this number of results before returning data. Used with `pageSize` to provide pagination for large datasets.",
            "allowEmptyValue": true,
            "minimum": 1,
            "default": 1
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer",
            "description": "If nonzero, return no more than this number of results. Used with `pageNum` to provide pagination for large datasets. Unless otherwise specified, the maximum number of records that can be returned from an API call is 20 records",
            "allowEmptyValue": true,
            "default": 20
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "default": "MAXIMUM_RETRIES_REACHED",
            "allowEmptyValue": true,
            "enum": [
              "PROCESSING",
              "SUCCESS",
              "MAXIMUM_RETRIES_REACHED"
            ],
            "description": "Event status defined in Lianlian Pay's system. One of:\n\n| status | description |\n|--------|-------------|\n| PROCESSING | Event is under processing |\n| SUCCESS | Successfully notified client via webhook. Received `200` HTTP status code return from registered webhook URL. |\n| MAXIMUM_RETRIES_REACHED | Callback stopped as maximum retry number reached without success. |"
          }
        ]
      }
    },
    "/events/{eventId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/event"
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Get Event",
        "description": "Get a Lianlian Pay system generated event by `eventId`\n\nReturn type is `Event` object",
        "tags": [
          "Operations"
        ],
        "operationId": "get-event"
      },
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    }
  },
  "tags": [
    {
      "name": "Operations"
    }
  ],
  "definitions": {
    "event": {
      "type": "object",
      "title": "Event ",
      "description": "Event object generated by Lianlian Pay's system. \n\nEvent is notified via registered webhook, and default status is `PROCESSING`. \n\nEvent status will be updated to `SUCCESS` after receiving `200` HTTP status code return from webhook url. Before success, Lianlian Pay will keep sending the event to registered webhook url every 60 minutes for 24 times in total. After all 24 retries without success, event status will then be updated to `MAXIMUM_RETRIES_REACHED`.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Event id in Lianlian Pay's system"
        },
        "topic": {
          "$ref": "#/definitions/event-topic-enum"
        },
        "data": {
          "type": "object",
          "description": "Event details",
          "required": [
            "objectId",
            "objectType"
          ],
          "properties": {
            "objectType": {
              "type": "string",
              "description": "Object type related to this event. One of:\n\n| type | description |\n|------|-------------|\n ",
              "enum": [
                "profile",
                "bill",
                "account",
                "document"
              ]
            },
            "objectId": {
              "type": "string",
              "description": "Id of the object that related in this event"
            },
            "url": {
              "type": "string",
              "description": "Event related API endpoint. Can be used to retrive the data object related to this event from Lianlian Pay's system. \n\nHttp method accepted is `GET`, type is `application/json`"
            }
          }
        },
        "createTime": {
          "type": "string",
          "description": "Event created time, UTC+0",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Event status defined in Lianlian Pay's system. One of:\n\n| status | description |\n|--------|-------------|\n| PROCESSING | Event is under processing |\n| SUCCESS | Successfully notified client via webhook. Received `200` HTTP status code return from registered webhook URL. |\n| MAXIMUM_RETRIES_REACHED | Callback notification stopped as maximum retrying number reached. |",
          "enum": [
            "PROCESSING",
            "SUCCESS",
            "MAXIMUM_RETRIES_REACHED"
          ]
        },
        "webhookURL": {
          "type": "string",
          "description": "Registered webhook url for this event"
        }
      },
      "required": [
        "id",
        "topic",
        "data",
        "createTime",
        "webhookURL",
        "status"
      ]
    },
    "event-topic-enum": {
      "type": "string",
      "title": "Event Topic Enumeration",
      "description": "Event topics defined in Lianlian Pay's system.\n\n| Topic | Description |\n|--------|------------|\n| funding.funded | 如果账单加款成功, 可以查到相应加款流水   |\n| tuitionEvidence.approved |当提交申请的留学材料被审核通过时,审核通过后可发送汇兑指令，TuitionInfo.status会变成APPROVED|\n| tuitionEvidence.reject |当提交申请的留学材料被审核通过时,审核通过后可发送汇兑指令，TuitionInfo.status会变成REJECT|\n| exchange.successed | 汇兑分发指令处理成功,如果只做汇兑ExchangeTrans.status会变成EXCHANGE_SUCCESS，如果要做分发ExchangeTrans.status会变成PAYMENT_SUCCESS|\n| exchange.failed | 汇兑分发指令处理失败.ReFundingTrans.status会变成PAYMENT_FAILED|\n| refunding.successed|退款成功，ReFundingTrans.status会变成SUCCESS |\n| refunding.failed|退款失败，ReFundingTrans.status会变成FAILED|\n| exchangereturn.success|退汇成功，ExchangeReturn.status会变成SUCCESS |\n| exchangereturn.failed|退汇失败，ExchangeReturn.status会变成FAILED|\n| exchangecancel.success|汇兑取消成功，ExchangeTrans.status会变成CANCEL，且ExchangeTrans.cancelStatus会变成SUCCESS|\n| exchangecancel.failed|汇兑取消失败，ExchangeTrans.status会变成SUCCESS，且ExchangeTrans.cancelStatus会变成FAILED|\n",
      "enum": [
        "account.paymentaccount.created",
        "bill.funded"
      ]
    }
  },
  "responses": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/common/V1",
  "securityDefinitions": {},
  "security": [
    {
      "authorization": []
    },
    {
      "llpay-signature": []
    }
  ]
}