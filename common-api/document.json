{
  "swagger": "2.0",
  "info": {
    "title": "Document API",
    "version": "1.0",
    "description": "Due to data security regulations, Lianlian Pay hosts two file systems, one in China and one in U.S., to keep file based data within the profile sourcing country/region.\n\nThis section contains operations and models of Lianlian Pay China file system. \n\nProduction Endpoint - **global-api.lianlianpay.com**",
    "contact": {
      "email": "fx_support@lianlianpay.com"
    }
  },
  "host": "global-api-sandbox.lianlianpay-inc.com",
  "paths": {
    "/documents": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/document"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 510002 | Unsupported document type. |\n| 999995 | \\[PARAMETER\\] ERROR_MESSAGE |",
            "schema": {
              "$ref": "./error.oas2.yml#/definitions/error"
            }
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Upload Document",
        "description": "Upload document to Lianlian Pay system. \n\nReturn type is `Document` object. `Document.id` should be used in other APIs if a support document is required.",
        "operationId": "upload-document",
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "description": "The file itself",
                  "type": "object"
                },
                "referenceId": {
                  "type": "string",
                  "description": "Document size"
                }
              },
              "required": [
                "file"
              ]
            }
          },
          {
            "in": "header",
            "name": "Idempotency-Key",
            "type": "string",
            "description": "**Optional**\n\nA unique value generated by the client which the server uses to recognize subsequent retries of the same request."
          }
        ]
      }
    },
    "/documents/{documentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string",
              "format": "byte",
              "description": "Document data streaming"
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Download Document",
        "description": "Download document file by `dcoumentId`. \n\n",
        "operationId": "download-document",
        "tags": [
          "Operations"
        ]
      },
      "parameters": [
        {
          "name": "documentId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    }
  },
  "tags": [
    {
      "name": "Operations"
    }
  ],
  "definitions": {
    "document": {
      "type": "object",
      "title": "Document ",
      "description": "File object in Lianlian Pay's system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Document id in Lianlian Pay system",
          "maxLength": 32
        },
        "name": {
          "type": "integer",
          "description": "Document name",
          "maximum": 128
        },
        "createTime": {
          "type": "string",
          "description": "Document create time, UTC+0",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "createTime"
      ]
    }
  },
  "responses": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/common/v1",
  "securityDefinitions": {
    "authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "LianLian Pay API uses an API key to authenticate requests. To request Lianlian Pay developer account, send the following two information to `fx_support@lianlianpay.com`:\n<!-- theme: info -->\n>**developer_name**\n>\n>**developer_public_key**\n\nAfter process, Lianlian Pay will replay with:\n<!-- theme: info -->\n>**developer_master_token** - api authentication\n>\n>**developer_refresh_token** - refresh developer master token, valid for a year. Can be updated by sending request to `fx_support@lianlianpay.com`\n>\n>**LianlianPay_public_key**\n\nThe `Authorization` header must be included in all requests with the following format:\n\n```\nAuthorization: Basic {master_token}\n```"
    },
    "llpay-signature": {
      "type": "apiKey",
      "name": "LLPAY-Signature",
      "in": "header",
      "description": "The LLPAY-Signature header contains a timestamp and one or more signatures. The timestamp is prefixed by t=, and each signature is prefixed by a scheme. Schemes start with v, potentially followed by an integer.\n\n```\nLLPAY-Signature: t=1492774577, v=5257a869e7ecebeda32affa62cdca3fa51cad7e77a0e56ff536d0ce8e108d8bd\n```\n\nNote that newlines have been added in the example above for clarity, but a real LLPAY-Signature header will be all one line.\n\nLianlian Pay and clients shall exchange each partyâ€™s public key.  The LLPAY-Signature will be signed by with the RSA private key.\n\n**Step 1:** Determine the signature payload\n\nCreate a `payload` string which is the following connected with `&`\n\n* HTTP_METHOD: The actual method defined for specific API endpoint `POST`\n* URI: The request's URL Path, such as `/profiles/{profileId}`\n* REQUEST_EPOCH: The seconds elapsed since 1970/1/1 00:00:00 GMT, same as value of `t`\n* REQUEST_PAYLOAD: The contents of request body in JSON format. \n* QUERY_STRING: The query string of the URL, URL Encoded, such as `attr1%3Dvalue1%26attr2%3Dvalue2`\n\n<!-- theme: info -->\n>Case 1: QUERY_STRING is empty:\n>\n>**Formula is**: HTTP_METHOD&URI&REQUEST_EPOCH&REQUEST_PAYLOAD\n>\n>---\n>Case 2: REQUEST_PAYLOAD is empty:\n>\n>**Formula is**: HTTP_METHOD&URI&REQUEST_EPOCH&&QUERY_STRING\n>\n>---\n>Case 3: REQUEST_PAYLOAD and QUERY_STRING both are empty:\n>\n>**Formula is**: HTTP_METHOD&URI&REQUEST_EPOCH&\n\n\nPut typical GET and POST examples here.\n\nExample POST `payload`:\n```\nPOST&/kyc/v1/profiles&19879234&{\"profileId\":\"string\",\"countryOfOrigin\":\"CN\",\"type\":\"COMPANY\",\"email\":\"abc@xyz.com\",\"mobile\":\"string\",\"indicator\":\"string\",\"kyc\":{\"name\":\"string\",\"idNumber\":\"string\",\"idFrontCopy\":\"string\",\"idBackCopy\":\"string\",\"address\":{\"lineOne\":\"string\",\"lineTwo\":\"string\",\"city\":\"string\",\"province\":\"string\",\"region\":\"string\",\"postalCode\":\"string\"}}}\n```\n\nExample GET `payload`:\n```\nGET&/events/v1&19879234&&status%3DMAXIMUM_RETRIES_REACHED\n```\n\n\n\n**Step 2:** Prepare the `LLPAY-Signature` string\n\nAchieve this by concatenating:\n* The timestamp (Seconds elapsed since 1970/1/1 00:00:00 GMT as a string)\n* Use your RSA private key and calculate the string `BASE64(RSAwithSHA256(STEP_1_RESULT)))` from Step 1\n\n### Result Signature\n\nLianLian Pay result headers also contain the `LLPAY-Signature` header as described above but signed with Lianlian Pay's private RSA key.  You may verify the signature corresponds to the Result body by calculating the signature and comparing it to the unencrypted version of `LLPAY-Signature` using the Lianlian Pay's public RSA key.  Here are the steps:\n\n**Step 1:** Determine the signature `payload`\n\nCreate a `payload` string which is the following separated by `&`\n\n* Response Timestamp: Extract t from LLPay-Signature and use it as timestamp\n* Response Payload: The contents of response body in JSON format\n\nExample `payload`:\n```\n19879234&{\"profileId\":\"string\",\"countryOfOrigin\":\"CN\",\"type\":\"COMPANY\",\"email\":\"abc@xyz.com\",\"mobile\":\"string\",\"indicator\":\"string\",\"kyc\":{\"name\":\"string\",\"idNumber\":\"string\",\"idFrontCopy\":\"string\",\"idBackCopy\":\"string\",\"address\":{\"lineOne\":\"string\",\"lineTwo\":\"string\",\"city\":\"string\",\"province\":\"string\",\"region\":\"string\",\"postalCode\":\"string\"}}}\n```\n\n**Step 2:** Use RSA Verify to compare signatures\n\nCompare the LLPay-Signature received with the `payload` calculated in Step 1 using the Lianlian Pay's Public Key using the following algorithm:\n\n```\nRSA.verify( LLPAY-Signature, \n            '19879234&{\"profileId\":\"string\",\"countryOfOrigin\":\"CN\",\"type\":\"COMPANY\",\"email\":\"abc@xyz.com\",\"mobile\":\"string\",\"indicator\":\"string\",\"kyc\":{\"name\":\"string\",\"idNumber\":\"string\",\"idFrontCopy\":\"string\",\"idBackCopy\":\"string\",\"address\":{\"lineOne\":\"string\",\"lineTwo\":\"string\",\"city\":\"string\",\"province\":\"string\",\"region\":\"string\",\"postalCode\":\"string\"}}}', \n            Lianlian Pay Public Key )\n```\n"
    }
  },
  "security": [
    {
      "authorization": []
    }
  ]
}