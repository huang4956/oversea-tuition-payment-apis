{
  "swagger": "2.0",
  "info": {
    "title": "Currency ExChange API",
    "version": "1.0"
  },
  "host": "global-api.lianlianpay.com/outbound/bill/v1",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/exchange/{exchangeId}/cancel": {
      "put": {
        "summary": "Cancel Exchange Trans",
        "operationId": "put-exchangecancel",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "": {
                  "type": "string"
                }
              }
            },
            "description": "Bad Request\n\nPossible error codes:\n\n| Code | Description |\n|------|-------------|\n| 020606|exchange transaction cannot support FX cancel |\n| 020607|exchange transaction has been FX reversed|\n| 999995 |Parameter is error. |"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "Reverse a previously created FX request. Result will be noticed by webhook event, client can also get corresponding results via `Query Exchange Trans`\n\n1. Only FX without balance transfer request can be reversed\n2. Partialy reversed FX request(reversed via `Return Exchange Trans`) can not be reversed\n3. Orgional FX rate will be used to reverse the FX request.\n4. After reverse, a new FX can be created if necessary",
        "tags": [
          "Operations"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "exchangeId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/exchangereturn/{exchangReturnId}": {
      "parameters": [
        {
          "type": "string",
          "name": "exchangReturnId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Query Exchange Return Trans",
        "tags": [
          "Operations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "exchangeReturn": {
                  "$ref": "#/definitions/ExchangeReturn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nPossible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 |Parameter is error. |",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-exchangereturns-exchangReturnId",
        "description": "Get FX reverse transaction record details by `exchangReturnId`"
      }
    },
    "/exchangereturn": {
      "post": {
        "summary": "Return Exchange Trans",
        "operationId": "post-exchangereturns",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request\n\nPossible error codes:\n\n| Code | Description |\n|------|-------------|\n| 020603 | exchange transaction has been cancelled |\n| 020604| FX reverse currency not fit|\n| 020605 | FX reverse amount exceed original exchange amount |\n| 020609 | exchangeReturnId already exist |\n| 999995 | Parameter is error. |",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "headers": {
              "header-0": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "exchangeReturnId": {
                  "type": "string",
                  "description": "unique FX reverse id from client"
                },
                "exchangeId": {
                  "type": "string",
                  "description": "Original unique exchange id from client"
                },
                "returnCurrency": {
                  "type": "string",
                  "description": "FX reverse currency"
                },
                "returnAmount": {
                  "type": "string",
                  "description": "FX reverse amount"
                },
                "memo": {
                  "type": "string",
                  "description": "Memo"
                }
              },
              "required": [
                "exchangeReturnId",
                "exchangeId",
                "returnCurrency",
                "returnAmount"
              ]
            },
            "description": ""
          }
        ],
        "description": "Initiate a partial FX reverse request, Result will be noticed by webhook event, client can also get corresponding results via `Query Exchange Trans`\n\n1. Partial FX request is only supported for certain instructions which the original instruction is separate foreign exchange instruction.\n2. The original FX rate and materials is used to conduct re-exchange and the refund declaration will be performed.\n3. Requested FX reverse amount cannot exceed the amount of original payout. \n4. FX reverse request is only able to performed in original transaction and target currency.\n5. It’s allowed to partially exchange and once it’s initiated, the corresponding bill cannot be used to send the payout instruction.\n\nFX reverse is only supported from foreign currency into CNY. For the refund in CNY returned to customer’s bank account, please use `Create Refunding Trans` API\n",
        "tags": [
          "Operations"
        ]
      },
      "parameters": []
    },
    "/exchange/{exchangeId}": {
      "parameters": [
        {
          "type": "string",
          "name": "exchangeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Query Exchange Trans",
        "tags": [
          "Operations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExchangeTrans"
            }
          },
          "400": {
            "description": "Bad Request\n\nPossible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 |Parameter is error. |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-exchanges-exchangeid",
        "description": "Get FX transaction record details by `exchangeId`"
      }
    },
    "/exchange": {
      "post": {
        "summary": "Create Currency Exchange Transcation",
        "operationId": "post-exchanges",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request\n\nPossible error codes:\n\n| Code | Description |\n|------|-------------|\n| 020102|Payer is auditing|\n| 020103|Payer is rejected|\n| 020403|bill has no funding|\n| 020304|trading material document audit failure |\n| 020601|exchangeId already exist|\n| 020602|exchange amount abnormal|\n| 999995 |Parameter is error. |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create a single FX request, result will be returned via webhook event. Client can also use `Query Exchange Trans` API to get the corresponding request results.\n\nPre-requirements:\n1. Corresponding trading material documents must be `APPROVED` \n2. FX request amount should within the range of 3% positive/negative bill amount floating and the range of 3% positive/negative total funding amount floating\n3. One FX request per bill.\n\nIf no beneficiary account information are included in request body, Lianlian Pay will initiate FX without balance transfer.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "exchangeId": {
                  "type": "string",
                  "description": "unique exchange id from client"
                },
                "billId": {
                  "type": "string",
                  "description": "bill id from client"
                },
                "pricingCurrency": {
                  "type": "string",
                  "description": "Pricing currency:\nISO 3166 Alpha-3，if pricing currency is sourcing currency, the targetAmount is calculated according to sourceAmount and exchange rate"
                },
                "sourceCurrency": {
                  "type": "string",
                  "description": "CNY"
                },
                "sourceAmount": {
                  "type": "string",
                  "description": "Sourcing Amount"
                },
                "targetCurrency": {
                  "type": "string",
                  "description": "FX targeting currency code, one of\n\n| value | description  |\n|--------|-------------|\n|USD |USD |\n|EUR |EUR |\n|GBP |GBP|\n|CAD |CAD|\n|JPY |JPY|\n|THB |THB|\n|IDR |IDR|\n|AED |AED|\n|HKD |HKD|\n|CNH |CNH|\n\n"
                },
                "targetAmount": {
                  "type": "string",
                  "description": "FX amount, mandatory if transaction currency is targeting currency."
                },
                "payeeBankAccount": {
                  "$ref": "#/definitions/PayeeBankAccountInfo"
                },
                "rfb": {
                  "type": "string",
                  "description": "rfb",
                  "maxLength": 105
                }
              },
              "required": [
                "exchangeId",
                "billId",
                "pricingCurrency",
                "sourceCurrency",
                "targetCurrency"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Operations"
        ]
      },
      "get": {
        "summary": "Query Bill Exchange Transcation",
        "operationId": "get-exchanges",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExchangeTrans"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nPossible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 |Parameter is error. |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "billId",
            "description": "账单编号"
          }
        ],
        "tags": [
          "Operations"
        ],
        "description": "Get payment transaction record details by billId"
      },
      "parameters": []
    }
  },
  "definitions": {
    "ExchangeTrans": {
      "title": "ExchangeTrans",
      "type": "object",
      "description": "FX object defined in Lianlian Pay system.\n\nIf payeeBankAccount is blank, Lianlian Pay will initiate FX withou out balance transfer.\n\n\n",
      "x-tags": [
        "Models"
      ],
      "x-examples": {},
      "properties": {
        "exchangeId": {
          "type": "string",
          "description": "FX request id from client"
        },
        "billId": {
          "type": "string",
          "description": "Bill id from client"
        },
        "pricingCurrency": {
          "type": "string",
          "description": "Pricing currency:\nISO 3166 Alpha-3，if pricing currency is sourcing currency, the targetAmount is calculated according to sourceAmount and exchange rate"
        },
        "sourceCurrency": {
          "type": "string",
          "description": "sourcing currency"
        },
        "sourceAmount": {
          "type": "string",
          "description": "sourcing currency, mandatory if targeting currency is pricing currency"
        },
        "targetCurrency": {
          "type": "string",
          "description": "targeting currency"
        },
        "targetAmount": {
          "description": "targeting amount, mandatory if targeting currency is pricing currency",
          "type": "string"
        },
        "payeeBankAccount": {
          "$ref": "#/definitions/PayeeBankAccountInfo"
        },
        "rfb": {
          "type": "string",
          "description": "rfb"
        },
        "status": {
          "type": "string",
          "description": "request status, one of:\n\n| value | description |\n|--------|-------------|\n|INIT|Init|\n|PROCESSING|Processing|\n|SUCCESS|Success|\n|FAILED|Failed|\n|PAYMENT_REVERSED_AFTER_SUCCESS|Reverse success|\n|CANCEL|Canceled|\n",
          "enum": [
            "PAYMENT_SUCCESS",
            "PAYMENT_REVERSED_AFTER_SUCCESS",
            "EXCHANGE_SUCCESS",
            "PROCESSING",
            "FAILED",
            "INIT",
            "EXCHANGE_CANCEL",
            "EXCHANGE_CANCELING"
          ]
        },
        "failReason": {
          "type": "string",
          "description": "request failure reason"
        },
        "createTime": {
          "type": "string",
          "description": "create time"
        },
        "cancelStatus": {
          "type": "string",
          "description": "Cancel status, one of:\n| value | description |\n|--------|-------------|\n|INIT|Init|\n|PROCESSING|Processing|\n|SUCCESS|Success|\n|FAILED |Failed|\n",
          "enum": [
            "PROCESSING",
            "SUCCESS",
            "FAILED"
          ]
        },
        "rate": {
          "type": "string",
          "description": "FX rate"
        }
      },
      "required": [
        "exchangeId",
        "billId",
        "pricingCurrency",
        "sourceCurrency",
        "targetCurrency",
        "status"
      ]
    },
    "PayeeBankAccountInfo": {
      "title": "PayeeBankAccountInfo",
      "type": "object",
      "description": "Beneficiary bank account information",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "payeeCountryCode": {
          "type": "string",
          "description": "Beneficiary account country, ISO 3166 code"
        },
        "payeeName": {
          "type": "string",
          "description": "beneficiary name"
        },
        "payeeAddress": {
          "type": "string",
          "description": "beneficiary address"
        },
        "payeeBankDistrict": {
          "type": "string",
          "description": "beneficiary bank account region"
        },
        "payeeBankAccountType": {
          "type": "string",
          "description": "|payeeBankAccountType| description |\n|--------|-------------|\n|INDIVIDUAL|个人|\n|CORPORATE|企业|\n",
          "enum": [
            "INDIVIDUAL",
            "CORPORATE"
          ]
        },
        "payeeBankName": {
          "type": "string",
          "description": "Beneficiary bank name"
        },
        "payeeBankType": {
          "type": "string",
          "description": "beneficiary bank account type, one of:\n|payeeBankType| description |\n|--------|-------------|\n|IBAN|IBAN |\n|SORT|SORT |"
        },
        "payeeBankCode": {
          "type": "string",
          "description": "Beneficiary bank code"
        },
        "payeeBankAddress": {
          "type": "string",
          "description": "beneficiary bank address"
        },
        "payeeBankSwiftCode": {
          "type": "string",
          "description": "Beneficiary bank SWIFT code"
        },
        "payeeAccountNo": {
          "type": "string",
          "description": "Beneficiary account number"
        }
      },
      "required": [
        "payeeCountryCode",
        "payeeName",
        "payeeBankName",
        "payeeBankAddress",
        "payeeBankSwiftCode",
        "payeeAccountNo"
      ]
    },
    "ExchangeReturn": {
      "title": "ExchangeReturn",
      "type": "object",
      "description": "",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "exchangeReturnId": {
          "type": "string",
          "description": "Unique xechange return id from client"
        },
        "exchangeId": {
          "type": "string",
          "description": "Original exhange id from client"
        },
        "returnCurrency": {
          "type": "string",
          "description": "return currency"
        },
        "returnAmount": {
          "type": "string",
          "description": "return amount"
        },
        "createTime": {
          "type": "string",
          "description": "create time"
        },
        "status": {
          "type": "string",
          "description": "request status\n\n|value |description|\n|------|------------|\n|INIT|Init|\n|PROCESSING|Processing |\n|SUCCESS|Success|\n|FAILED|Failed |"
        },
        "failReason": {
          "type": "string",
          "description": "Failure reason"
        },
        "memo": {
          "type": "string",
          "description": "memo"
        }
      },
      "required": [
        "exchangeReturnId",
        "exchangeId",
        "returnCurrency",
        "returnAmount"
      ]
    }
  }
}